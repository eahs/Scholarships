@model Scholarships.Models.ScholarshipViewModels.ScholarshipApplyViewModel

@{
    ViewData["Title"] = "Apply";
}

<ol class="breadcrumb">
    <li class="breadcrumb-item">
        <a asp-controller="Admin" asp-action="Index">Home</a>
    </li>
    <li class="breadcrumb-item">
        <a asp-controller="Scholarships" asp-action="Index">Scholarships</a>
    </li>
    <li class="breadcrumb-item active">
        <strong>Scholarship Application</strong>
    </li>
</ol>

<h2>Scholarship Application</h2>
<div class="ibox">
    <div class="ibox-content">
        <div id="app">
            <h3>Additional Questions</h3>
            <fieldset data-mode="async" data-url="/AnswerSet/QuestionFormAjax/@Model.Application.AnswerSetId">
            </fieldset>

            <h3>Preview</h3>
            <fieldset>
                <legend>Profile Information</legend>

                <label for="name-2">First name *</label>
                <input id="name-2" name="name" type="text" class="required">
                <label for="surname-2">Last name *</label>
                <input id="surname-2" name="surname" type="text" class="required">
                <label for="email-2">Email *</label>
                <input id="email-2" name="email" type="text" class="required email">
                <label for="address-2">Address</label>
                <input id="address-2" name="address" type="text">
                <label for="age-2">Age (The warning step will show up if age is less than 18) *</label>
                <input id="age-2" name="age" type="text" class="required number">
                <p>(*) Mandatory</p>
            </fieldset>

            <h3>Finish</h3>
            <fieldset>
                <legend>Terms and Conditions</legend>

                <input id="acceptTerms-2" name="acceptTerms" type="checkbox" class="required"> <label for="acceptTerms-2">I agree with the Terms and Conditions.</label>
            </fieldset>
        </div>
    </div>
</div>



@section Styles {

    <link href="~/lib/jquery-steps/jquery.steps.css" rel="stylesheet">

}

@section Scripts {

    <script src="~/lib/jquery-steps/jquery.steps.min.js"></script>

    <script type="text/javascript">

        $(document).ready(function () {

            var form = $("#app").show();

            form.steps({
                headerTag: "h3",
                bodyTag: "fieldset",
                transitionEffect: "slideLeft",
                onStepChanging: function (event, currentIndex, newIndex) {
                    // Allways allow previous action even if the current form is not valid!
                    if (currentIndex > newIndex) {
                        return true;
                    }
                    // Forbid next action on "Warning" step if the user is to young
                    if (newIndex === 3 && Number($("#age-2").val()) < 18) {
                        return false;
                    }
                    // Needed in some cases if the user went back (clean up)
                    if (currentIndex < newIndex) {
                        // To remove error styles
                        form.find(".body:eq(" + newIndex + ") label.error").remove();
                        form.find(".body:eq(" + newIndex + ") .error").removeClass("error");
                    }
                    form.validate().settings.ignore = ":disabled,:hidden";
                    return form.valid();
                },
                onStepChanged: function (event, currentIndex, priorIndex) {
                    // Used to skip the "Warning" step if the user is old enough.
                    if (currentIndex === 2 && Number($("#age-2").val()) >= 18) {
                        form.steps("next");
                    }
                    // Used to skip the "Warning" step if the user is old enough and wants to the previous step.
                    if (currentIndex === 2 && priorIndex === 3) {
                        form.steps("previous");
                    }
                },
                onFinishing: function (event, currentIndex) {
                    form.validate().settings.ignore = ":disabled";
                    return form.valid();
                },
                onFinished: function (event, currentIndex) {
                    alert("Submitted!");
                }
            }).validate({
                errorPlacement: function errorPlacement(error, element) { element.before(error); },
                rules: {
                    confirm: {
                        equalTo: "#password-2"
                    }
                }
            });


        }
        );
    </script>


    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

}
