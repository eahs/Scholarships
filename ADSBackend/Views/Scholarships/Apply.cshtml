@model Scholarships.Models.ScholarshipViewModels.ScholarshipApplyViewModel

@{
    ViewData["Title"] = "Apply";

    ViewBag.AnswerGroupId = Model.Application.AnswerGroupId;

    var props = @Model.Scholarship.ProfileProperties.Select(p => p.ProfileProperty?.PropertyName).ToList();

    if (Model.Scholarship.TranscriptsRequired)
        props.Add("Student Transcripts");

    var fields = String.Join(", ", props.ToArray());

}

<ol class="breadcrumb">
    <li class="breadcrumb-item">
        <a asp-controller="Admin" asp-action="Index">Home</a>
    </li>
    <li class="breadcrumb-item">
        <a asp-controller="Scholarships" asp-action="Index">Scholarships</a>
    </li>
    <li class="breadcrumb-item active">
        <strong>Scholarship Application</strong>
    </li>
</ol>

<h2>Scholarship Application</h2>
@if (Model.Scholarship.ApplicationInstructions.Length > 0)
{
    <div class="alert alert-info">@Html.Raw(Model.Scholarship.ApplicationInstructions)</div>
}
<div class="ibox">
    <div class="ibox-content">
        <div id="app">
            <h3>Additional Questions</h3>
            <fieldset id="additionalQuestions">
            </fieldset>

            <h3>Preview</h3>
            <fieldset id="appformContainer">
                @await  Html.PartialAsync("_ScholarshipApplicationPartial")
            </fieldset>

            <h3>FERPA Release</h3>
            <fieldset>
                <h2>FERPA Release Authorization</h2>

                <form id="ferpaAuth">

                    <div>
                        This screen is in regards to the release of and access to your educational records under FERPA, the Family Educational Rights and Privacy Act. Since FERPA is a complex law, we want to provide some key information before you respond.  We also suggest discussing FERPA with your counselor, parent, guardian, or other school official to be better informed about your rights.
                        <br /><br />
                        How does FERPA relate to your scholarship application?<br />
                        <br />
                        FERPA regulates the privacy of student education records, which could include your scholarship application to the provider of this scholarship.  FERPA also gives you the right to review confidential letters of recommendation provided as part of that application after you enroll.
                        In a moment, you’ll be asked if you want to waive the right to review confidential letters of recommendation. What should you know about this waiver?
                        Waiving your right lets scholarship providers know that you do not intend to read your recommendations, which helps reassure scholarship providers that the letters are candid and truthful.
                        Some recommenders may decline to write a letter for you if you do not waive your rights. Check with your counselor or teachers to see if any of them follow such a policy.
                        Still unsure how to respond?
                        <br /><br />
                        That’s OK. Many students are. Before you move on, take a moment to discuss your decision with your counselor, another school official, or your parent/legal guardian.<br /><br />
                    </div>

                    <div class="form-row">
                        <div class="col-auto"><input id="acceptTerms-2" name="acceptTerms" type="checkbox" class="required"></div>
                        <div class="col"><label for="acceptTerms-2" style="font-weight: 500">I have read and understood the FERPA Release Authorization explanation above.</label></div>
                    </div>

                </form>
            </fieldset>

            <h3>Finish</h3>
            <fieldset>
                <h2>FERPA Form</h2>

                <form id="ferpaForm">

                    <div class="form-row">
                        The scholarship provider has requested the following information, in addition to any questions listed in part 1 of this application:<br />
                        @fields
                    </div>

                    <br />

                    <div class="form-row">
                        <div class="col-auto"><input id="acceptRelease" name="acceptRelease" type="checkbox" class="required"></div>
                        <div class="col"><label for="acceptRelease" style="font-weight: 500">I acknowledge that every school that I have attended may release all requested records and recommendations to scholarship providers to which I am applying for a scholarship. I also understand that employees or representatives of these scholarships may confidentially contact my current and former schools should they have questions about the information submitted on my behalf.</label></div>
                    </div>
                    
                    <br />

                    <div class="form-group">
                        <label class="control-label" for="ferpaTerms">Please select one:</label><br />
                        <input type="radio" name="ferpaTerms" value="yes" /> <span style="font-weight: 500">I waive my right to review all recommendations and supporting documents.</span><br />
                        <input type="radio" name="ferpaTerms" value="no" /> <span style="font-weight: 500">I DO NOT waive my right to review all recommendations and supporting documents.</span>
                    </div>

                    <div class="form-row">
                        <div class="col">
                            <div class="form-group">
                                <label class="control-label" for="signature">Signature</label>
                                <input type="text" class="form-control" placeholder="Enter your full name">
                            </div>
                        </div>
                        <div class="col" id="sigdate">
                            <div class="form-group">
                                <div class="input-group date">
                                    <label class="control-label" for="SignatureDate" style="width: 100%">Date</label><br />
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span><input name="SignatureDate" data-mask="99/99/9999" value="@DateTime.Now.ToString("MM/dd/yyyy")" class="form-control" />
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </fieldset>
        </div>
    </div>
</div>



@section Styles {

    <link href="~/lib/bootstrap-datepicker/dist/css/datepicker3.css" rel="stylesheet" />
    <link href="~/lib/jquery-steps/jquery.steps.css" rel="stylesheet">
    <link href="~/lib/iCheck/custom.css" rel="stylesheet">
    <link href="~/lib/dropzone/dropzone.css" rel="stylesheet"/>
}

@section Scripts {

    <script src="~/lib/bootstrap-datepicker/dist/js/bootstrap-datepicker.js"></script>
    <script src="~/lib/jquery-steps/jquery.steps.min.js"></script>
    <script src="~/lib/iCheck/icheck.min.js"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script src="~/lib/dropzone/dropzone.js"></script>

    <script type="text/javascript">

        function saveForm(form) {
            var post_url = $(form).attr("action"); //get form action url
            var form_data = $(form).serialize(); //Encode form elements for submission

            if ($(form).valid()) {

                $.ajax({
                    type: "POST",
                    url: post_url,
                    data: form_data,
                    dataType: "json"
                }).done(function (response, textStatus, jqXHR) {
                    if (!response.isError) {
                        $("#appformContainer").html(response.primaryForm);
                    } else if (response.Status === "InvalidRequest") {
                        displayValidationErrors(response.modelStateErrors);
                    }
                })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                    })
                    .always(function () {

                    });

            }
        }

        function processForm(response) {

                var container = document.getElementById("app");
                var newForm = $("#appform");
                $.validator.unobtrusive.parse(newForm);
                $('input').iCheck({
                    checkboxClass: 'icheckbox_square-green',
                    radioClass: 'iradio_square-green',

                });
                $('input').on('ifToggled', function (event) {
                    saveForm(newForm);
                });
                $(newForm).change(function () {
                    saveForm(newForm);
                });
                $('#appform .input-group.date').datepicker({
                    todayBtn: "linked",
                    keyboardNavigation: false,
                    forceParse: true,
                    calendarWeeks: true,
                    autoclose: true,
                    format: "mm/dd/yyyy"
                });
                $(".dropzone").dropzone(
                    {
                        url: "/AnswerGroup/Upload/@Model.Application.AnswerGroupId", 
                        paramName: () => "files", // The name that will be used to transfer the file
                        maxFilesize: 10, // MB
                        uploadMultiple: true,
                        parallelUploads: 100,
                        dictDefaultMessage: "<strong>Drop files here or click to upload. </strong>",
                        init: function() {
                            var opt = this;
                            var questionid = $(opt.element).data("questionid");
                            var answersetid = $(opt.element).data("answersetid");

                            opt.options.params = {
                                questionid: questionid,
                                answersetid: answersetid
                            }
                        },
                        sending: function(file, xhr, formData) {
                            //formData.append("_token", token);
                        }
                    });

        }

        $(document).ready(function () {

            Dropzone.options.dropzoneForm = {
                paramName: () => "files", // The name that will be used to transfer the file
                maxFilesize: 15, // MB
                uploadMultiple: true,
                parallelUploads: 100,
                dictDefaultMessage: "<strong>Drop files here or click to upload. </strong>"
            };

            var mem = $('#sigdate .input-group.date').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: true,
                calendarWeeks: true,
                autoclose: true,
                format: "mm/dd/yyyy"
            });

            $.ajax({
                url: "/AnswerGroup/QuestionFormAjax/@Model.Application.AnswerGroupId",
                dataType: "json"
            }).done(function (response, textStatus, jqXHR) {
                $("#app-p-0").html(response.primaryForm);
                processForm(response);
            });

            var form = $("#app").show();

            form.steps({
                headerTag: "h3",
                bodyTag: "fieldset",
                transitionEffect: "slideLeft",
                labels: {
                    cancel: "Cancel",
                    current: "current step:",
                    pagination: "Pagination",
                    finish: "Submit Application",
                    next: "Next",
                    previous: "Previous",
                    loading: "Loading ..."
                },
                onContentLoaded: function (event, currentIndex) {
                },
                onStepChanging: function (event, currentIndex, newIndex) {
                    // Allways allow previous action even if the current form is not valid!
                    if (currentIndex > newIndex) {
                        return true;
                    }

                    if (currentIndex == 2) {
                        if (!$('input[name="acceptTerms"]').prop("checked")) {

                            swal("Cannot proceed",
                                "In order to apply for this scholarship, you must agree to the FERPA Release Authorization.",
                                "error")
                                .then((value) => {

                                });

                            return false;

                        }
                    }
                    /*
                    // Forbid next action on "Warning" step if the user is to young
                    if (newIndex === 3 && Number($("#age-2").val()) < 18) {
                        return false;
                    }
                    */
                    return true;  // return form.valid()
                },
                onStepChanged: function (event, currentIndex, priorIndex) {
                    /*
                    // Used to skip the "Warning" step if the user is old enough.
                    if (currentIndex === 2 && Number($("#age-2").val()) >= 18) {
                        form.steps("next");
                    }
                    // Used to skip the "Warning" step if the user is old enough and wants to the previous step.
                    if (currentIndex === 2 && priorIndex === 3) {
                        form.steps("previous");
                    }
                    */
                },
                onFinishing: function (event, currentIndex) {
                    form.validate().settings.ignore = ":disabled";
                    return form.valid();
                },
                onFinished: function (event, currentIndex) {
                    alert("Submitted!");
                }
            });


        }
        );
    </script>


    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

}
