@using Microsoft.AspNetCore.Routing.Constraints
@model Scholarships.Models.ScholarshipViewModels.ScholarshipApplyViewModel

@{
    var props = @Model.Scholarship.ProfileProperties.Select(p => p.ProfileProperty?.PropertyKey).ToList();

    string DisplayProp(string propertyName, string value)
    {
        return props.Contains(propertyName) ? value ?? "" : "";
    }

    var Name = DisplayProp("LastName", Model.Application.Profile.LastName) + ", " +
               DisplayProp("FirstName", Model.Application.Profile.FirstName) + " " +
               DisplayProp("MiddleName", Model.Application.Profile.MiddleName?.ToCharArray().FirstOrDefault() + "");

    var StudentId = DisplayProp("StudentId", Model.Application.Profile.StudentId);

    var AParts = new[]
    {
        DisplayProp("Address1", Model.Application.Profile.Address1),
        DisplayProp("Address2", Model.Application.Profile.Address2),
        DisplayProp("City", Model.Application.Profile.City),
        DisplayProp("State", Model.Application.Profile.State),
        DisplayProp("ZipCode", Model.Application.Profile.ZipCode)
        };

    AParts = AParts.Where(ap => ap.Trim().Length > 0).ToArray();

    var HomeAddress = String.Join(", ", AParts);

    var PhoneNumber = DisplayProp("Phone", Model.Application.Profile.Phone);

    var BirthDate = DisplayProp("BirthDate", Model.Application.Profile.BirthDate.ToString("MM/dd/yyyy"));
    var Email = DisplayProp("Email", Model.Application.Profile.Email);

    var genderDescription = "";
    switch (Model.Application.Profile.Gender)
    {
        case 0:
            genderDescription = "Male";
            break;
        case 1:
            genderDescription = "Female";
            break;
        case 2:
            genderDescription = "Other";
            break;
    }
    var Gender = DisplayProp("Gender", genderDescription);

    var ClassRank = DisplayProp("ClassRank", Model.Application.Profile.ClassRank + "");
    var GPA = DisplayProp("GPA", Model.Application.Profile.GPA + "");
    var SATScoreReading = DisplayProp("SATScoreReading", Model.Application.Profile.SATScoreReading + "");
    var SATScoreMath = DisplayProp("SATScoreMath", Model.Application.Profile.SATScoreMath + "");
    var ACTScore = DisplayProp("ACTScore", Model.Application.Profile.ACTScore + "");

    var AcademicGroup = (ClassRank + GPA + SATScoreReading + SATScoreMath + ACTScore).Length > 0;

    var livingSituation = "";
    switch (Model.Application.Profile.LivingSituation)
    {
        case "oncampus":
            livingSituation = "Live on Campus";
            break;
        case "commute":
            livingSituation = "Commute";
            break;
        default:
            livingSituation = "Unknown";
            break;
    }

    var CollegeAttending = DisplayProp("CollegeAttending", Model.Application.Profile.CollegeAttending);
    var TuitionYearly = DisplayProp("TuitionYearly", Model.Application.Profile.TuitionYearly.ToString("C"));
    var RoomBoard = DisplayProp("RoomBoard", Model.Application.Profile.RoomBoard.ToString("C"));
    var TuitionTotal = DisplayProp("TuitionTotal", Model.Application.Profile.TuitionTotal.ToString("C"));
    var CollegeAccepted = DisplayProp("CollegeAccepted", Model.Application.Profile.CollegeAccepted ? "Yes" : "No");
    var CollegeIntendedMajor = DisplayProp("CollegeIntendedMajor", Model.Application.Profile.CollegeIntendedMajor);
    var FieldOfStudy = DisplayProp("FieldOfStudy", Model.Application.Profile.FieldOfStudy?.Name);
    var LivingSituation = DisplayProp("LivingSituation", livingSituation);

    var CollegePlans = (CollegeAttending+TuitionYearly+RoomBoard+TuitionTotal+CollegeAccepted+CollegeIntendedMajor+FieldOfStudy+LivingSituation).Length > 0;

    var OtherAid = DisplayProp("OtherAid", Model.Application.Profile.OtherAid);
    var SpecialCircumstances = DisplayProp("SpecialCircumstances", Model.Application.Profile.SpecialCircumstances);

    var ActivitiesSchool = DisplayProp("ActivitiesSchool", Model.Application.Profile.ActivitiesSchool);
    var ActivitiesCommunity = DisplayProp("ActivitiesCommunity", Model.Application.Profile.ActivitiesCommunity);
    var SchoolOffices = DisplayProp("SchoolOffices", Model.Application.Profile.SchoolOffices);

}

    <div class="col-lg-10">


        <div class="scholarship-watermark"></div>

        <div class="text-center" style="font-weight: 500; margin-bottom: 10px">
            EASTON AREA SCHOOL DISTRICT<br />
            Easton, Pennsylvania<br />
            SCHOLARSHIP APPLICATION
        </div>

        <h2>SCHOLARSHIP: @Model.Scholarship.Name</h2>
        <p>Applicant Submission Date: @Model.Application.SubmittedDate.ToLongDateString()</p>

        <div class="ibox">
            <div class="ibox-content">
                @if ((StudentId + Name).Length > 0)
                {
                    <div class="row">
                        @if (Name.Length > 0)
                        {
                            <div class="col-1">Name:</div>
                            <div class="col-4"><u>@Name</u></div>
                        }
                        @if (StudentId.Length > 0)
                        {
                            <div class="col-1">Student ID:</div>
                            <div class="col-4"><u>@StudentId</u></div>
                        }
                    </div>
                }
                @if (HomeAddress.Length > 0)
                {
                    <div class="row">
                        <div class="col-1">Home Address:</div><div class="col-4"><u>@Html.Raw(HomeAddress)</u></div>
                    </div>
                }
                @if ((BirthDate + PhoneNumber + Gender).Length > 0)
                {
                    <div class="row">
                        @if (BirthDate.Length > 0)
                        {
                            <div class="col-1">Birth Date:</div>
                            <div class="col-2"><u>@BirthDate</u></div>
                        }
                        @if (Gender.Length > 0)
                        {
                            <div class="col-1">Gender:</div>
                            <div class="col-1"><u>@Gender</u></div>

                        }
                        @if (PhoneNumber.Length > 0)
                        {
                            <div class="col-1">Phone Number:</div>
                            <div class="col-2"><u>@PhoneNumber</u></div>
                        }
                    </div>
                }
                @if (Email.Length > 0)
                {
                    <div class="row">
                        <div class="col-1">Email:</div><div class="col-4"><u>@Email</u></div>
                    </div>
                }
            </div>
        </div>

        @if (AcademicGroup)
        {
            <fieldset class="ibox">
                <legend class="ibox-legend">Academic Performance</legend>
                <div class="ibox-content">
                    @if ((ClassRank + GPA).Length > 0)
                    {
                        <div class="row">
                            @if (ClassRank.Length > 0)
                            {
                                <div class="col-2">Class Rank:</div>
                                <div class="col-1"><u>@ClassRank</u></div>
                            }

                            @if (GPA.Length > 0)
                            {
                                <div class="col-1">GPA:</div>
                                <div class="col-1"><u>@GPA</u></div>
                            }
                        </div>
                    }
                    @if ((SATScoreReading + SATScoreMath + ACTScore).Length > 0)
                    {
                        <div class="row">
                            @if (SATScoreReading.Length > 0)
                            {
                                <div class="col-2">SAT Reading:</div>
                                <div class="col-1"><u>@SATScoreReading</u></div>
                            }

                            @if (SATScoreMath.Length > 0)
                            {
                                <div class="col-1">SAT Math:</div>
                                <div class="col-1"><u>@SATScoreMath</u></div>
                            }

                            @if (ACTScore.Length > 0)
                            {
                                <div class="col-1">ACT:</div>
                                <div class="col-1"><u>@ACTScore</u></div>
                            }
                        </div>
                    }
                </div>
            </fieldset>
        }

        @if (CollegePlans)
        {
            <fieldset class="ibox">
                <legend class="ibox-legend">College Plans</legend>
                <div class="ibox-content">
                    @if ((CollegeAttending + CollegeIntendedMajor).Length > 0)
                    {
                        <div class="row">
                            @if (CollegeAttending.Length > 0)
                            {
                                <div class="col-2">College you will attend:</div>
                                <div class="col-2"><u>@CollegeAttending</u></div>
                            }
                            @if (CollegeIntendedMajor.Length > 0)
                            {
                                <div class="col-2">Intended Major:</div>
                                <div class="col-2"><u>@CollegeIntendedMajor</u></div>
                            }

                        </div>
                    }
                    @if (FieldOfStudy.Length > 0)
                    {
                        <div class="row">
                            <div class="col-2">General Field of Study:</div>
                            <div class="col-5"><u>@FieldOfStudy</u></div>
                        </div>
                    }
                    @if ((CollegeAccepted + LivingSituation).Length > 0)
                    {
                        <br />
                        <div class="row">
                            @if (CollegeAccepted.Length > 0)
                            {
                                <div class="col-2">Have you been accepted:</div>
                                <div class="col-2"><u>@CollegeAccepted</u></div>
                            }
                            @if (LivingSituation.Length > 0)
                            {
                                <div class="col-2">Will you (<i>live on campus/commute)</i>:</div>
                                <div class="col-2"><u>@LivingSituation</u></div>
                            }
                        </div>
                    }
                    @if (TuitionYearly.Length > 0)
                    {
                        <br />
                        <div class="row">
                            <div class="col-2">Tuition (cost per year):</div>
                            <div class="col-2"><u>@TuitionYearly</u></div>
                        </div>
                    }
                    @if (RoomBoard.Length > 0)
                    {
                        <div class="row">
                            <div class="col-2">Room & Board:</div>
                            <div class="col-2"><u>@RoomBoard</u></div>
                        </div>
                    }

                    @if (TuitionTotal.Length > 0)
                    {
                        <div class="row">
                            <div class="col-2">Total Tuition:</div>
                            <div class="col-2"><u>@TuitionTotal</u></div>
                        </div>
                    }
                </div>
            </fieldset>

            @if (OtherAid.Length > 0)
            {
                <fieldset class="ibox">
                    <legend class="ibox-legend">Other Aid</legend>
                    <div class="ibox-content">
                        <div class="row">
                            <div class="col-8">@Html.Raw(OtherAid)</div>
                        </div>

                    </div>
                </fieldset>
            }

            @if (SpecialCircumstances.Length > 0)
            {
                <fieldset class="ibox">
                    <legend class="ibox-legend">Special Circumstances</legend>
                    <div class="ibox-content">
                        <div class="row">
                            <div class="col-8">@Html.Raw(SpecialCircumstances)</div>
                        </div>
                    </div>
                </fieldset>
            }

            @if ((ActivitiesSchool + ActivitiesCommunity).Length > 0)
            {
                <fieldset class="ibox">
                    <legend class="ibox-legend">Extracurricular Activities</legend>
                    <div class="ibox-content">
                        <div class="row">
                            <div class="col-2">School Activities</div><div class="col-8">@Html.Raw(ActivitiesSchool.Replace(Environment.NewLine, "; "))</div>
                        </div>
                        <div class="row">
                            <div class="col-2">Community Activities</div><div class="col-8">@Html.Raw(ActivitiesCommunity.Replace(Environment.NewLine, "; "))</div>
                        </div>

                    </div>
                </fieldset>
            }
        }

    </div>

<!--
Guardians
-->
