@model Scholarships.Models.ScholarshipViewModels.ScholarshipDetailsViewModel

@{
    ViewData["Title"] = "Details";

    var props = @Model.Scholarship.ProfileProperties.Select(p => p.ProfileProperty?.PropertyName).ToList();

    if (Model.Scholarship.TranscriptsRequired)
        props.Add("Student Transcripts");

    var fields = String.Join(", ", props.ToArray());

}

<ol class="breadcrumb">
    <li class="breadcrumb-item">
        <a asp-controller="Admin" asp-action="Index">Home</a>
    </li>
    <li class="breadcrumb-item">
        <a asp-controller="Scholarships" asp-action="Index">Scholarships</a>
    </li>
    <li class="breadcrumb-item active">
        <strong>Scholarship Details</strong>
    </li>
</ol>

<h1>Scholarship Details</h1>
<div class="row">
    <div class="col-9">
        <h3>
            @Html.DisplayFor(model => model.Scholarship.Name)
        </h3>
    </div>
    <div class="col-3">
        @{
            var favoriteClass = "heart";
            if (Model.Scholarship.IsFavorite)
            {
                favoriteClass += " heart-blast";
            }
        }
        <div class="@favoriteClass" data-toggle="tooltip" data-placement="left" title="Add to Favorites" data-scholarship-id="@Model.Scholarship.ScholarshipId"></div>
    </div>
</div>

<div class="ibox">
    <div class="ibox-content scholarship-detail">
        <div>

            <h4>@Html.DisplayNameFor(model => model.Scholarship.Description)</h4>
            <div class="indent">
                @Html.Raw(Model.Scholarship.Description)
            </div>

            <h4>@Html.DisplayNameFor(model => model.Scholarship.Eligibility)</h4>

            <div class="indent">
                @Html.Raw(Model.Scholarship.Eligibility)
            </div>

            <h4>@Html.DisplayNameFor(model => model.Scholarship.Standards)</h4>
            <div class="indent">
                @Html.Raw(Model.Scholarship.Standards)
            </div>


            <h4>@Html.DisplayNameFor(model => model.Scholarship.Amount)</h4>
            <div class="indent">
                @Html.Raw(Model.Scholarship.Amount)
            </div>

            <h4>@Html.DisplayNameFor(model => model.Scholarship.ApplicationInstructions)</h4>
            <div class="indent">
                @Html.Raw(Model.Scholarship.ApplicationInstructions)
            </div>

            <p></p>
            <p></p>

            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Scholarship.ApplyOnline)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Scholarship.ApplyOnline)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Scholarship.TranscriptsRequired)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Scholarship.TranscriptsRequired)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Scholarship.ReleaseDate)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Scholarship.ReleaseDate)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Scholarship.DueDate)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Scholarship.DueDate)
                </dd>
                @if (Model.Scholarship.ApplyOnline)
                {
                    <dt class="col-sm-2">
                        Information Requested
                    </dt>
                    <dd class="col-sm-10">
                        @fields
                    </dd>
                }
            </dl>

        </div>
    </div>
</div>

@if (Model.CanApply)
{
    <div class="ibox">
        <div class="ibox-title"><h3>Your Application</h3></div>
        <div class="ibox-content">
            @if (Model.ApplicationCompleted)
            {
                <p>You have already applied for this scholarship.  Stay tuned for announcements on results.</p>
            }
            else if (DateTime.Now > Model.Scholarship.DueDate.Date.AddDays(1).AddMinutes(-1))
            {
                <p>We're sorry but the application deadline for this scholarship has passed.</p>
            }
            else if (Model.ProfileCompleted)
            {
                <a asp-controller="Scholarships" asp-action="Apply" asp-route-id="@Model.Scholarship.ScholarshipId" class="btn btn-success btn-lg">Apply For Scholarship</a>
            }
            else
            {
                <b>You aren't quite ready to apply for this scholarship because the following fields in your profile aren't completed:</b>
                <p>
                    <ul>
                        @foreach (var status in Model.FieldStatus)
                        {
                            <li><a href="@status.FormURI">@status.FieldName</a> - <span style="color: red">@status.ErrorMessage</span></li>
                        }
                    </ul>
                </p>
            }
        </div>
    </div>
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {

    <script type="text/javascript">
        $(function () {

            $('[data-toggle="tooltip"]').tooltip();

            $(".heart").on("click", function () {
                $(this).toggleClass("heart-blast");

                var favToggle = $(this).hasClass("heart-blast");
                var scholarshipId = $(this).data("scholarship-id");

                var form = $('#__AjaxAntiForgeryForm');
                var token = $('input[name="__RequestVerificationToken"]', form).val();

                $.ajax({
                    type: "POST",
                    url: "/Scholarships/ToggleFavorite",
                    data: {
                        __RequestVerificationToken: token,
                        id: scholarshipId,
                        state: favToggle
                    },
                    dataType: "json"
                }).done(function (response, textStatus, jqXHR) {

                }).fail(function (jqXHR, textStatus, errorThrown) {
                        $(this).toggleClass("heart-blast");
                }).always(function () {

                });
            });
        });

    </script>

}